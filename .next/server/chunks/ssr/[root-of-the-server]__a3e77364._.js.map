{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///home/sadman/workspace/ielts-speaking-clone/src/services/client/axiosClient.ts"],"sourcesContent":["// services/tenmsClient.ts\nimport axios from \"axios\";\n\nexport const TenmsClient = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL,\n  headers: {\n    \"X-TENMS-SOURCE-PLATFORM\": \"web\",\n    accept: \"application/json\",\n  },\n});\n\nexport { TenmsClient as API };\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;;AAEO,MAAM,cAAc,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACtC,OAAO;IACP,SAAS;QACP,2BAA2B;QAC3B,QAAQ;IACV;AACF","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/sadman/workspace/ielts-speaking-clone/src/services/api/ieltsCourse.api.ts"],"sourcesContent":["import { IIeltsResponse, Response } from \"@/types/ieltsCourse.type\";\nimport { API } from \"../client/axiosClient\";\n\nexport const getIeltsCourse = async (\n  lang: string\n): Promise<Response<IIeltsResponse>> => {\n  try {\n    const response = await API.get(`/products/ielts-course?lang=${lang}`);\n    return response;\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      throw new Error(`Failed to fetch IELTS course: ${error.message}`);\n    }\n    throw new Error(\"Failed to fetch IELTS course: Unknown error\");\n  }\n};\n"],"names":[],"mappings":";;;AACA;;AAEO,MAAM,iBAAiB,OAC5B;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,wIAAA,CAAA,MAAG,CAAC,GAAG,CAAC,CAAC,4BAA4B,EAAE,MAAM;QACpE,OAAO;IACT,EAAE,OAAO,OAAgB;QACvB,IAAI,iBAAiB,OAAO;YAC1B,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,MAAM,OAAO,EAAE;QAClE;QACA,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/sadman/workspace/ielts-speaking-clone/src/components/screens/home-screen/index.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/screens/home-screen/index.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/screens/home-screen/index.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgT,GAC7U,8EACA","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/sadman/workspace/ielts-speaking-clone/src/components/screens/home-screen/index.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/screens/home-screen/index.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/screens/home-screen/index.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/sadman/workspace/ielts-speaking-clone/src/app/%5Blang%5D/page.tsx"],"sourcesContent":["import type { Metadata } from \"next\"\nimport { getIeltsCourse } from \"@/services/api/ieltsCourse.api\"\nimport HomeIndex from \"@/components/screens/home-screen\" // Import the client component\n\n// Define props for the page component, including params for locale\ninterface IELTSCoursePageProps {\n  params: {\n    locale: string\n  }\n}\n\n// generateMetadata function runs on the server\nexport async function generateMetadata({ params }: IELTSCoursePageProps): Promise<Metadata> {\n  const { locale } = params\n  const {\n    data: { data: course },\n  } = await getIeltsCourse(locale) // Fetch data for metadata\n\n  const seo = course.seo\n\n  const openGraph: Record<string, any> = {}\n  const images: { url: string; type?: string; alt?: string }[] = []\n\n  seo.defaultMeta.forEach((meta) => {\n    if (meta.type === \"property\") {\n      if (meta.value === \"og:title\") openGraph.title = meta.content\n      else if (meta.value === \"og:description\") openGraph.description = meta.content\n      else if (meta.value === \"og:url\") openGraph.url = meta.content\n      else if (meta.value === \"og:type\") openGraph.type = meta.content\n      else if (meta.value === \"og:locale\") openGraph.locale = meta.content\n      else if (meta.value === \"og:image\" || meta.value === \"og:image:secure_url\") {\n        const existingImage = images.find((img) => img.url === meta.content)\n        if (!existingImage) {\n          images.push({ url: meta.content })\n        }\n      } else if (meta.value === \"og:image:type\") {\n        const lastImage = images[images.length - 1]\n        if (lastImage) lastImage.type = `image/${meta.content}`\n      } else if (meta.value === \"og:image:alt\") {\n        const lastImage = images[images.length - 1]\n        if (lastImage) lastImage.alt = meta.content\n      }\n    } else if (meta.type === \"name\") {\n      // Handle other meta tags if needed, e.g., twitter:image, etc.\n      if (meta.value === \"og:image:secure_url\") {\n        const existingImage = images.find((img) => img.url === meta.content)\n        if (!existingImage) {\n          images.push({ url: meta.content })\n        }\n      }\n    }\n  })\n\n  if (images.length > 0) {\n    openGraph.images = images\n  }\n\n  const jsonLdScripts = seo.schema\n    .filter((s) => s.type === \"ld-json\" && s.meta_value) // Filter out empty meta_value\n    .map((s) => JSON.parse(s.meta_value))\n\n  return {\n    title: seo.title,\n    description: seo.description,\n    keywords: seo.keywords,\n    openGraph: openGraph,\n    alternates: {\n      types: {\n        \"application/ld+json\": jsonLdScripts,\n      },\n    },\n  }\n}\n\n// Page component (Server Component)\nexport default async function IELTSCoursePage({ params }: IELTSCoursePageProps) {\n  const { locale } = params\n  const {\n    data: { data: course },\n  } = await getIeltsCourse(locale) // Fetch data for the page content\n\n  return (\n    // Pass the fetched course data to the client component\n    <HomeIndex />\n  )\n}\n"],"names":[],"mappings":";;;;;AACA;AACA,yQAAyD,8BAA8B;;;;AAUhF,eAAe,iBAAiB,EAAE,MAAM,EAAwB;IACrE,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,MAAM,EACJ,MAAM,EAAE,MAAM,MAAM,EAAE,EACvB,GAAG,MAAM,CAAA,GAAA,4IAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,0BAA0B;;IAE3D,MAAM,MAAM,OAAO,GAAG;IAEtB,MAAM,YAAiC,CAAC;IACxC,MAAM,SAAyD,EAAE;IAEjE,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,KAAK,IAAI,KAAK,YAAY;YAC5B,IAAI,KAAK,KAAK,KAAK,YAAY,UAAU,KAAK,GAAG,KAAK,OAAO;iBACxD,IAAI,KAAK,KAAK,KAAK,kBAAkB,UAAU,WAAW,GAAG,KAAK,OAAO;iBACzE,IAAI,KAAK,KAAK,KAAK,UAAU,UAAU,GAAG,GAAG,KAAK,OAAO;iBACzD,IAAI,KAAK,KAAK,KAAK,WAAW,UAAU,IAAI,GAAG,KAAK,OAAO;iBAC3D,IAAI,KAAK,KAAK,KAAK,aAAa,UAAU,MAAM,GAAG,KAAK,OAAO;iBAC/D,IAAI,KAAK,KAAK,KAAK,cAAc,KAAK,KAAK,KAAK,uBAAuB;gBAC1E,MAAM,gBAAgB,OAAO,IAAI,CAAC,CAAC,MAAQ,IAAI,GAAG,KAAK,KAAK,OAAO;gBACnE,IAAI,CAAC,eAAe;oBAClB,OAAO,IAAI,CAAC;wBAAE,KAAK,KAAK,OAAO;oBAAC;gBAClC;YACF,OAAO,IAAI,KAAK,KAAK,KAAK,iBAAiB;gBACzC,MAAM,YAAY,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;gBAC3C,IAAI,WAAW,UAAU,IAAI,GAAG,CAAC,MAAM,EAAE,KAAK,OAAO,EAAE;YACzD,OAAO,IAAI,KAAK,KAAK,KAAK,gBAAgB;gBACxC,MAAM,YAAY,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;gBAC3C,IAAI,WAAW,UAAU,GAAG,GAAG,KAAK,OAAO;YAC7C;QACF,OAAO,IAAI,KAAK,IAAI,KAAK,QAAQ;YAC/B,8DAA8D;YAC9D,IAAI,KAAK,KAAK,KAAK,uBAAuB;gBACxC,MAAM,gBAAgB,OAAO,IAAI,CAAC,CAAC,MAAQ,IAAI,GAAG,KAAK,KAAK,OAAO;gBACnE,IAAI,CAAC,eAAe;oBAClB,OAAO,IAAI,CAAC;wBAAE,KAAK,KAAK,OAAO;oBAAC;gBAClC;YACF;QACF;IACF;IAEA,IAAI,OAAO,MAAM,GAAG,GAAG;QACrB,UAAU,MAAM,GAAG;IACrB;IAEA,MAAM,gBAAgB,IAAI,MAAM,CAC7B,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,aAAa,EAAE,UAAU,EAAE,8BAA8B;KAClF,GAAG,CAAC,CAAC,IAAM,KAAK,KAAK,CAAC,EAAE,UAAU;IAErC,OAAO;QACL,OAAO,IAAI,KAAK;QAChB,aAAa,IAAI,WAAW;QAC5B,UAAU,IAAI,QAAQ;QACtB,WAAW;QACX,YAAY;YACV,OAAO;gBACL,uBAAuB;YACzB;QACF;IACF;AACF;AAGe,eAAe,gBAAgB,EAAE,MAAM,EAAwB;IAC5E,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,MAAM,EACJ,MAAM,EAAE,MAAM,MAAM,EAAE,EACvB,GAAG,MAAM,CAAA,GAAA,4IAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,kCAAkC;;IAEnE,OACE,uDAAuD;kBACvD,8OAAC,wJAAA,CAAA,UAAS;;;;;AAEd","debugId":null}}]
}